{"version":3,"sources":["components/Main/Main.js","res/Login_back2.jpg","components/Login/Login.js","components/Main/Loading.js","components/Dashboard/Dashboard.js","components/Notes/NotesList.js","components/Notes/Note.js","components/Notes/NoteCreate.js","components/Notes/NotesModify.js","components/Words/WordsList.js","components/Words/Word.js","components/Words/WordsCreate.js","service/WordTest.js","components/Words/WordsTest.js","components/Words/WordsModify.js","service/settings.js","service/babelfish.js","containers/Content/Content.js","App.js","index.js"],"names":["Main","pressMenuButton","event","props","changeViewId","currentTarget","id","console","log","content","this","viewId","api_fetching","NotesData","userNoteDataLoad","userNoteDelete","changeFocusNoteId","userWordsDataLoad","userNoteCreate","focusNoteId","userNoteModify","WordsData","changeFocusWordId","userWordsDelete","WordsCreate","userWordsCreate","focusWordId","userWordsModify","userNoteLearningDayUpdate","userWordsWrongCountUpdate","class","viewBox","xmlns","d","onClick","fill","fill-rule","clip-rule","stroke","stroke-linecap","stroke-linejoin","stroke-width","Component","Login","state","email","password","inputIsChange","setState","target","name","value","pressedLoginButton","logindataManipulation","src","back","type","placeholder","onChange","Loading","Dashboard","viewid","ThisViewId","callback","setTimeout","loadingCompoment","bind","LearningCount_0","LearningCount_1","LearningCount_2","LearningCount_3","LearningCount_forever","totalNotesCount","Object","keys","length","toDay","Date","map","data","noteDate","Learning_Day","getTime","Learning_Count","push","Math","floor","NoteList","pressCreateNoteButton","notelist","Note","pressDeleteButton","stopPropagation","pressModifybutton","pressNotebutton","key","NoteCreate","pressCreateButton","NotesModify","pressModifyButton","noteData","find","element","Number","WordsList","MeanHide","pressWordCreateButton","pressMeanHideButton","pressWordTestButton","wordlist","notedata","wordTitle","Word_Title","mean1","Mean1","mean2","Mean2","wrongCount","Wrong_Count","Word","pressWorddeleteButton","then","pressWordModifyButton","WordCreate","title","testList","questions","loadingcount","createQuestions","wordListdata","wordListLength","answer","max","exception","count","random","a","b","shufflecount","wordId","correctAnswer","right","one","two","three","four","WordsTest","page","questionsCount","questionsData","noteLearningDate","pressNextButton","pressAnswerButton","news","prototype","yyyymmdd","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","questionsList","exam","date_toDay","date_noteLearningDate","error","questionsWordList","WordsModify","wordData","api_url","getToken","axios","post","settings","getNotes","usertoken","userid","get","headers","token","createNote","notename","modifyNote","noteid","put","deleteNote","delete","updatedNote","getWord","createWord","modifyWord","wordid","deleteWord","wrongCountWord","Content","error_msg","notes","words","service","sessionStorage","setItem","response","msg_code","request","message","config","getItem","status","modalHide","modalText","errmsg","modal","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98e85670.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NoteList } from '../';\nimport { NoteCreate } from '../';\nimport { WordsList } from '../';\nimport { WordsCreate } from '../';\nimport { WordsTest } from '../';\nimport { Loading } from '../';\nimport { WordsModify } from '../';\nimport { NotesModify } from '../';\nimport { Dashboard } from '../';\n\nimport './Header.css';\n\nclass Main extends Component {\n  componentDidMount() {\n    console.log(\"메인 뷰\")\n    //this.props.getNote(); //노트 데이터 받아옴\n  }\n  pressMenuButton = (event) => {\n    this.props.changeViewId(event.currentTarget.id);\n  }\n  render() {\n    let content;\n    switch (this.props.viewId) {\n      case 1:\n        content = <Dashboard\n          api_fetching={this.props.api_fetching}\n          viewId={this.props.viewId}\n          NotesData={this.props.NotesData}\n          changeViewId={this.props.changeViewId}\n          userNoteDataLoad={this.props.userNoteDataLoad}\n        />;\n        break;\n      case 2:\n        content = <NoteList\n          NotesData={this.props.NotesData}\n          changeViewId={this.props.changeViewId}\n          userNoteDelete={this.props.userNoteDelete}\n          userNoteDataLoad={this.props.userNoteDataLoad}\n          changeFocusNoteId={this.props.changeFocusNoteId}\n          userWordsDataLoad={this.props.userWordsDataLoad}\n        />;\n        break;\n      case 3:\n        content = <Loading />;\n        break;\n      case 4:\n        content = <Loading />;\n        break;\n      case 5:\n        content = <NoteCreate userNoteCreate={this.props.userNoteCreate} />;\n        break;\n      case 6:\n        content = <NotesModify\n          focusNoteId={this.props.focusNoteId}\n          NotesData={this.props.NotesData}\n          userNoteModify={this.props.userNoteModify}\n          changeViewId={this.props.changeViewId}\n        />;\n        break;\n      case 7:\n        content = <WordsList\n          changeViewId={this.props.changeViewId}\n          WordsData={this.props.WordsData}\n          NotesData={this.props.NotesData}\n          changeFocusWordId={this.props.changeFocusWordId}\n          userWordsDelete={this.props.userWordsDelete} //유저 단어 삭제\n          focusNoteId={this.props.focusNoteId}\n          userWordsDataLoad={this.props.userWordsDataLoad}\n        />;\n        break;\n      case 8:\n        content = <WordsCreate\n          userWordsCreate={this.props.userWordsCreate}\n          changeViewId={this.props.changeViewId}\n        />;\n        break;\n      case 9:\n        content = <WordsModify\n          WordsData={this.props.WordsData}\n          focusWordId={this.props.focusWordId}\n          userWordsModify={this.props.userWordsModify}//유저 단어 수정\n          changeViewId={this.props.changeViewId}\n        />;\n        break;\n      case 10:\n        content = <WordsTest\n          WordsData={this.props.WordsData}\n          changeViewId={this.props.changeViewId}\n          viewId={this.props.viewId}\n          userNoteLearningDayUpdate={this.props.userNoteLearningDayUpdate}\n          userWordsWrongCountUpdate={this.props.userWordsWrongCountUpdate}\n          api_fetching={this.props.api_fetching}\n          focusNoteId={this.props.focusNoteId}\n          NotesData={this.props.NotesData}\n        />;\n        break;\n    }\n    return (\n      <div>\n        {/* 네비게이션 */}\n        <div class=\"xl:flex w-full h-full min-h-screen\">\n          <div class=\"flex pt-8 space-y-10 h-48 w-screen flex-col xl:h-auto xl:w-24 bg-white rounded-lg\">\n            <div class=\"flex justify-center\">\n              <svg id=\"Layer_1\" class=\"w-8 h-8 fill-current text-blue-500\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m304.2 190.666h72.3c42.833 0 111.4 1.972 111.4-63.2 0-56.859-71.055-127.466-175.667-127.466h-8.033c-50.122 0-97.631 16.978-135.976 48.2h-16.674c-70.388 0-127.45 56.947-127.45 127.466 0 8.284 6.716 15 15 15h50.722c-.957 8.294-1.456 16.692-1.456 25.167 0 119.222 96.466 215.833 215.833 215.833h1.815l75.946 75.946c5.846 5.846 15.362 5.859 21.228-.015 15.703-15.706 24.35-36.584 24.35-58.792 0-17.521-5.384-34.216-15.371-48.199 9.987-13.98 15.371-30.677 15.371-48.201 0-22.21-8.65-43.091-24.364-58.806-5.858-5.859-15.356-5.858-21.213 0l-75.934 75.934h-1.827c-49.378 0-89.434-39.961-89.434-89.433.001-49.377 39.962-89.434 89.434-89.434zm23.033-160.092c83.486 6.424 130.667 62.563 130.667 96.893 0 28.401-20.324 33.2-81.4 33.2h-49.267zm0 360.178 63.827-63.826c4.23 7.724 6.478 16.429 6.478 25.479 0 14.197-5.529 27.545-15.569 37.585-.107.107-.221.224-.324.334-5.557 5.903-5.409 15.162.324 20.895 10.041 10.041 15.57 23.389 15.57 37.585 0 9.051-2.247 17.756-6.478 25.48l-63.827-63.827v-19.705zm-271.995-230.086c4.276-27.873 27.514-73.343 81.802-81.399-19.714 24.04-33.79 51.718-41.581 81.399zm129.529 119.434c0 63.796 49.863 115.659 112.467 119.234v2.203c-99.253-3.677-178.867-85.568-178.867-185.704s79.613-182.028 178.867-185.705v130.736c-62.688 3.582-112.467 55.519-112.467 119.236zm206.733-184.767c0-8.28-6.72-15-15-15s-15 6.72-15 15 6.72 15 15 15 15-6.72 15-15z\" /></g></svg>\n            </div>\n            <hr class=\"m-5\"></hr>\n            <div class=\"flex flex-row justify-center space-x-10 xl:flex-col xl:space-y-10 xl:space-x-0\">\n\n              {/* 홈 메뉴 1*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"1\" >\n                {this.props.viewId === 1 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" /></svg>\n              </div>\n              {/* 단어장 리스트 2*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"2\" >\n                {this.props.viewId === 2 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" /></svg>\n              </div>\n              {/* 다국어 3*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"3\">\n                {this.props.viewId === 3 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z\" clip-rule=\"evenodd\" /></svg>\n              </div>\n              {/* 다크모드 4 */}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"4\">\n                {this.props.viewId === 4 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" /></svg>\n              </div>\n            </div>\n          </div>\n          {/* 콘텐트 박스 */}\n          <div class=\"w-full h-full xl:h-auto xl:overflow-auto\">\n            <div class=\"hidescroll bg-gray-100 bottom-0 right-0 p-8 rounded-t-lg xl:rounded-l-3xl xl:p-16\">\n              {/* 콘텐츠 내용 */}\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/Login_back2.b4175f47.jpg\";","import React, { Component } from 'react';\nimport back from '../../res/Login_back2.jpg';\nclass Login extends Component{\n    state = {\n        email : \"\",\n        password : \"\"\n    }\n    // 입력폼 값 변경 이벤트\n    inputIsChange = (event) => {\n        //console.log(event.target.name);\n        //console.log(event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value //입력값이 변경될때마다 타겟 이름과 값을 받아 state에 새로 갱신합니다\n        });\n    }\n\n    // 로그인버튼 클릭\n    pressedLoginButton = (event) => {\n        //console.log(this.state);\n        this.props.logindataManipulation(this.state); // 상태값을 content.sendData 를통해 전달\n\n        //전달후 입력값 초기화\n        this.setState({\n            email : \"\",\n            password : \"\"\n        });\n    }\n    render() {\n        return (\n            // max-w-md mx-auto bg-white rounded-xl overflow-hidden xl:max-w-2xl xl:shadow w-full h-full\n        <div class=\"bg-white xl:shadow w-screen h-screen overflow-hidden\">\n            <div class=\"xl:flex\">\n                <div class=\"overflow-hidden h-28 xl:flex-shrink-0 xl:h-screen xl:w-auto\">\n                    <img class=\"object-cover xl:h-screen\" src={back}></img>\n                </div>\n\n                <div class=\"p-20 w-full space-y-3\">\n                    <div class=\"xl:w-96 space-y-3 mx-auto\">\n                        <div class=\"flex flex-row mb-20\">\n                            <svg id=\"Layer_1\" class=\"w-7 h-7 fill-current text-blue-500 \" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m304.2 190.666h72.3c42.833 0 111.4 1.972 111.4-63.2 0-56.859-71.055-127.466-175.667-127.466h-8.033c-50.122 0-97.631 16.978-135.976 48.2h-16.674c-70.388 0-127.45 56.947-127.45 127.466 0 8.284 6.716 15 15 15h50.722c-.957 8.294-1.456 16.692-1.456 25.167 0 119.222 96.466 215.833 215.833 215.833h1.815l75.946 75.946c5.846 5.846 15.362 5.859 21.228-.015 15.703-15.706 24.35-36.584 24.35-58.792 0-17.521-5.384-34.216-15.371-48.199 9.987-13.98 15.371-30.677 15.371-48.201 0-22.21-8.65-43.091-24.364-58.806-5.858-5.859-15.356-5.858-21.213 0l-75.934 75.934h-1.827c-49.378 0-89.434-39.961-89.434-89.433.001-49.377 39.962-89.434 89.434-89.434zm23.033-160.092c83.486 6.424 130.667 62.563 130.667 96.893 0 28.401-20.324 33.2-81.4 33.2h-49.267zm0 360.178 63.827-63.826c4.23 7.724 6.478 16.429 6.478 25.479 0 14.197-5.529 27.545-15.569 37.585-.107.107-.221.224-.324.334-5.557 5.903-5.409 15.162.324 20.895 10.041 10.041 15.57 23.389 15.57 37.585 0 9.051-2.247 17.756-6.478 25.48l-63.827-63.827v-19.705zm-271.995-230.086c4.276-27.873 27.514-73.343 81.802-81.399-19.714 24.04-33.79 51.718-41.581 81.399zm129.529 119.434c0 63.796 49.863 115.659 112.467 119.234v2.203c-99.253-3.677-178.867-85.568-178.867-185.704s79.613-182.028 178.867-185.705v130.736c-62.688 3.582-112.467 55.519-112.467 119.236zm206.733-184.767c0-8.28-6.72-15-15-15s-15 6.72-15 15 6.72 15 15 15 15-6.72 15-15z\"/></g></svg>\n                            <p class=\"font-sans text-2xl font-medium text-blue-500\">BabelFish</p>\n                        </div>\n                        <h2 class=\"mt-6 text-3xl text-gray-900\"> Login </h2>\n                        <h3 class=\"mt-6 text-sm text-gray-300\"> Log in with your data that you enterd during your registration. </h3>\n                        <div class=\"relative\">\n                            <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                                <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\" />\n                                    </svg>\n                                </div>\n                            </div>\n                                <input name=\"email\" type=\"text\" placeholder=\"E-mail\" value={this.state.email} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\"/>\n                        </div>\n                        <div class=\"relative\">\n                            <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                                <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                    </svg>\n                                </div>\n                            </div>\n                                <input name=\"password\" type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\"/>\n                        </div>\n                        <hr class=\"w-full\"></hr>\n                        <button class=\"rounded-lg bg-blue-600 h-10 w-full text-white\" onClick={this.pressedLoginButton}> Login </button>\n                        <p class=\"mt-6 text-sm text-gray-500 text-center\">Don't Have an account? Sign in</p>\n                        <p class=\"mt-6 text-sm text-gray-500 text-center\">Forget password?</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n  }\n  \n  export default Login;\n  ","import React, { Component } from 'react';\nimport './Header.css';\n  class Loading extends Component{\n      render() {\n          return (\n              <div class=\"flex justify-center items-center\">\n                  <div>\n                  <svg id=\"Layer_1\" class=\"w-20 h-20 fill-current text-gray-400 animate-pulse animate-spin\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m304.2 190.666h72.3c42.833 0 111.4 1.972 111.4-63.2 0-56.859-71.055-127.466-175.667-127.466h-8.033c-50.122 0-97.631 16.978-135.976 48.2h-16.674c-70.388 0-127.45 56.947-127.45 127.466 0 8.284 6.716 15 15 15h50.722c-.957 8.294-1.456 16.692-1.456 25.167 0 119.222 96.466 215.833 215.833 215.833h1.815l75.946 75.946c5.846 5.846 15.362 5.859 21.228-.015 15.703-15.706 24.35-36.584 24.35-58.792 0-17.521-5.384-34.216-15.371-48.199 9.987-13.98 15.371-30.677 15.371-48.201 0-22.21-8.65-43.091-24.364-58.806-5.858-5.859-15.356-5.858-21.213 0l-75.934 75.934h-1.827c-49.378 0-89.434-39.961-89.434-89.433.001-49.377 39.962-89.434 89.434-89.434zm23.033-160.092c83.486 6.424 130.667 62.563 130.667 96.893 0 28.401-20.324 33.2-81.4 33.2h-49.267zm0 360.178 63.827-63.826c4.23 7.724 6.478 16.429 6.478 25.479 0 14.197-5.529 27.545-15.569 37.585-.107.107-.221.224-.324.334-5.557 5.903-5.409 15.162.324 20.895 10.041 10.041 15.57 23.389 15.57 37.585 0 9.051-2.247 17.756-6.478 25.48l-63.827-63.827v-19.705zm-271.995-230.086c4.276-27.873 27.514-73.343 81.802-81.399-19.714 24.04-33.79 51.718-41.581 81.399zm129.529 119.434c0 63.796 49.863 115.659 112.467 119.234v2.203c-99.253-3.677-178.867-85.568-178.867-185.704s79.613-182.028 178.867-185.705v130.736c-62.688 3.582-112.467 55.519-112.467 119.236zm206.733-184.767c0-8.28-6.72-15-15-15s-15 6.72-15 15 6.72 15 15 15 15-6.72 15-15z\" /></g></svg>\n                  </div>\n              </div>\n          );\n      }\n    }\n    export default Loading;","import React, { Component } from 'react';\nimport { Loading } from '../';\n\nclass Dashboard extends Component {\n  state = {\n    viewid: 0 // 페이지 설정에 사용되는 상태 0: 로딩, 1: 메인 화면\n  }\n  constructor(props) {\n    super(props);\n    this.props.userNoteDataLoad();\n    this.state.viewid = 0;\n    //console.log(this.props.NotesData);\n  }\n  loadingCompoment(ThisViewId, callback) {\n    setTimeout(() => {\n      if (this.props.viewId === ThisViewId) { // 사용자가 뷰를 이동하지않고 계속 기다릴경우\n        if (this.props.api_fetching === false) { // API 질의가 진행중이 아닐경우\n          this.setState({ viewid: 1 }); // 내부 뷰 상태를 설정합니다 1 : 대시보드 출력\n        }else{ //api 모듈이 계속 질의 상태일경우\n          callback(1, this.loadingCompoment.bind(this)); //더 기다립니다..\n        }\n      } //기다리지 않고 뷰를 이탈했을 경우 그냥 종료합니다\n    }, 1000);\n  }\n  componentDidMount() {\n    // 지정된 시간 이후에 content state.api 가 계속 질의 중인지 확인합니다\n    // 작업을 다 끝낸 상태면 화면으로 리 랜더링 하게됩니다 작업중일경우 callback으로 다시 로딩함수를 호출합니다\n    this.loadingCompoment(1, this.loadingCompoment.bind(this));\n    //console.log(this.props.NotesData);\n  }\n  render() {\n    let content;\n    let LearningCount_0 = [];\n    let LearningCount_1 = [];\n    let LearningCount_2 = [];\n    let LearningCount_3 = [];\n    let LearningCount_forever = [];\n    let totalLearningCount = 0;\n    let totalNotesCount = 0;\n\n\n    switch (this.state.viewid) {\n      case 1:\n        if (Object.keys(this.props.NotesData).length > 0) { // 단어장 리스트 데이터가 있을경우\n        const toDay = new Date(); //현재 시간\n          this.props.NotesData.map((data) => { //노트 리스트 반복\n            let noteDate = new Date(data.Learning_Day); // 노트 마지막 학습일자 저장\n            noteDate = (toDay.getTime() - noteDate.getTime()) / 1000 / 60 / 60 / 24; // 오늘 - 노트 마지막 학습일 시간차 계산\n\n            totalLearningCount = totalLearningCount + data.Learning_Count;\n            totalNotesCount = totalNotesCount + 1;\n\n            if (data.Learning_Count === 0) {\n              console.log(`등록만한 단어장`);\n              if (noteDate >= 1) {\n                console.log(`1일 이상 지남`);\n                LearningCount_0.push(\n                  <div class=\"xl:w-80 w-full mt-4 mr-4 h-32 bg-white rounded-lg shadow-sm p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                    <span class=\"animate-ping absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <span class=\"absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <h1 class=\"subpixel-antialiased text-xl font-semibold text-gray-600\">{data.name}</h1>\n                    <hr class=\"m-2\"></hr>\n                    <h2 class=\"subpixel-antialiased text-base text-gray-300\">{Math.floor(noteDate)}일 동안 방치했습니다</h2>\n                    <h3 class=\"subpixel-antialiased text-sm text-gray-300\">지금 시작하세요!</h3>\n                  </div>\n                );\n              }\n\n            } else if (data.Learning_Count === 1) { //2회독 추천 단어장\n              console.log(`한번 학습 단어장`);\n              if (noteDate >= 1) {\n                console.log(`1일 이상 지남`);\n                LearningCount_1.push(\n                  <div class=\"xl:w-80 w-full mt-4 mr-4 h-32 bg-white rounded-lg shadow-sm p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                    <span class=\"animate-ping absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <span class=\"absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <h1 class=\"subpixel-antialiased text-xl font-semibold text-gray-600\">{data.name}</h1>\n                    <hr class=\"m-2\"></hr>\n                    <h2 class=\"subpixel-antialiased text-base text-gray-300\">1회독 한지 {Math.floor(noteDate)}일이 지났습니다</h2>\n                  </div>\n                );\n              }\n            } else if (data.Learning_Count === 2) { //3 회독 추천 단어장\n              console.log(`두번 학습 단어장`);\n              if (noteDate >= 3) {\n                console.log(`3일 이상 지남`);\n                LearningCount_2.push(\n                  <div class=\"xl:w-80 w-full mt-4 mr-4 h-32 bg-white rounded-lg shadow-sm p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                    <span class=\"animate-ping absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <span class=\"absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <h1 class=\"subpixel-antialiased text-xl font-semibold text-gray-600\">{data.name}</h1>\n                    <hr class=\"m-2\"></hr>\n                    <h2 class=\"subpixel-antialiased text-base text-gray-300\">2회독 한지 {Math.floor(noteDate)}일이 지났습니다</h2>\n                  </div>\n                );\n              }\n            } else if (data.Learning_Count === 3) { // 4회독 추천 단어장\n              console.log(`세번 학습 단어장`);\n              if (noteDate >= 7) {\n                console.log(`7일 이상 지남`);\n                LearningCount_3.push(\n                  <div class=\"xl:w-80 w-full mt-4 mr-4 h-32 bg-white rounded-lg shadow-sm p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                    <span class=\"animate-ping absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <span class=\"absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <h1 class=\"subpixel-antialiased text-xl font-semibold text-gray-600\">{data.name}</h1>\n                    <hr class=\"m-2\"></hr>\n                    <h2 class=\"subpixel-antialiased text-base text-gray-300\">3회독 한지 {Math.floor(noteDate)}일이 지났습니다</h2>\n                  </div>\n                );\n              }\n            } else if (data.Learning_Count >= 4) { //정기복습 추천\n              console.log(`세번이상 학습 단어장`);\n              if (noteDate >= 30) {\n                console.log(`30일 이상 지남`);\n                LearningCount_forever.push(\n                  <div class=\"xl:w-80 w-full mt-4 mr-4 h-32 bg-white rounded-lg shadow-sm p-4 transition duration-500 ease-in-out transform hover:-translate-y-2 hover:scale-105\">\n                    <span class=\"animate-ping absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <span class=\"absolute -m-5 h-3 w-3 rounded-full bg-red-400 opacity-75\"></span>\n                    <h1 class=\"subpixel-antialiased text-xl font-semibold text-gray-600\">{data.name}</h1>\n                    <hr class=\"m-2\"></hr>\n                    <h2 class=\"subpixel-antialiased text-base text-gray-300\">마지막 학습일로부터 {Math.floor(noteDate)}일이 지났습니다</h2>\n                  </div>\n                );\n              }\n            }\n          });\n        content = (\n          <div class=\"flex flex-col space-y-8\">{/* 추천학습 콘텐츠 타이틀 */}\n            <div>\n              <h1 class=\"subpixel-antialiased text-3xl font-semibold text-gray-600\">오늘의 추천 학습 플랜</h1>\n            </div>\n            {LearningCount_0.length !== 0 && (\n\n              <div>\n                <div>\n                  <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">1회독 추천 단어장</h1>\n                  <h1 class=\"subpixel-antialiased text-gray-400\">단어장 생성이후 1일이상 지난 단어장 입니다</h1>\n                </div>\n                <div class=\"flex flex-row flex-wrap\">\n                  {LearningCount_0}\n                </div>\n              </div>\n            )}\n\n            {LearningCount_1.length !== 0 && (\n\n              <div>\n                <div>\n                  <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">2회독 추천 단어장</h1>\n                  <h1 class=\"subpixel-antialiased text-gray-400\">1회독한지 1일이상 지난 단어장 입니다</h1>\n                </div>\n                <div class=\"flex flex-row flex-wrap\">\n                  {LearningCount_1}\n                </div>\n              </div>\n            )}\n\n            {LearningCount_2.length !== 0 && (\n\n              <div>\n                <div>\n                  <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">3회독 추천 단어장</h1>\n                  <h1 class=\"subpixel-antialiased text-gray-400\">2회독한지 3일이상 지난 단어장 입니다</h1>\n                </div>\n                <div class=\"flex flex-row flex-wrap\">\n                  {LearningCount_2}\n                </div>\n              </div>\n            )}\n            {LearningCount_3.length !== 0 && (\n\n              <div>\n                <div>\n                  <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">4회독 추천 단어장</h1>\n                  <h1 class=\"subpixel-antialiased text-gray-400\">3회독한지 7일이상 지난 단어장 입니다</h1>\n                </div>\n                <div class=\"flex flex-row flex-wrap\">\n                  {LearningCount_3}\n                </div>\n              </div>\n            )}\n            {LearningCount_forever.length !== 0 && (\n\n              <div>\n                <div>\n                  <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">정기복습 추천 단어장</h1>\n                  <h1 class=\"subpixel-antialiased text-gray-400\">가벼운 마음으로 복습 어떠세요?</h1>\n                </div>\n                <div class=\"flex flex-row flex-wrap\">\n                  {LearningCount_forever}\n                </div>\n              </div>\n            )}\n              { LearningCount_1.length <= 0 && LearningCount_2.length <= 0 && LearningCount_3.length <= 0 && LearningCount_forever.length <= 0 ? (\n                              <div>\n                              <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">꾸준히 하고 계시네요!</h1>\n                              <h1 class=\"subpixel-antialiased text-gray-400\">저희가 살펴봤는데 {totalNotesCount}개의 단어장 중에 추천드릴께 없어요</h1>\n                              <h1 class=\"subpixel-antialiased text-gray-400\">단어장을 더 만들어서 공부 해볼까요?</h1>\n                            </div>\n              ):'우리 열심히 해봐요!'}\n          </div>\n        );\n            }else{\n            content = (\n              <div>\n              <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">안녕하세요?</h1>\n              <h1 class=\"subpixel-antialiased text-gray-400\">지금은 추천할 단어장이 없어요 단어장 먼저 우리 만들어봐요!</h1>\n            </div>\n              );\n            }\n        break;\n      default:\n        content = (<Loading />);\n        break;\n    }\n    return (\n      <div>\n        {content}\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { Note } from '../';\n\nclass NoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.props.userNoteDataLoad();\n  }\n  componentDidMount() {\n    console.log(\"노트 리스트\")\n  }\n  //노트 생성 버튼\n  pressCreateNoteButton = (event) => {\n    this.props.changeViewId(5); // 뷰 전환 노트 생성\n  }\n  render() {\n    let notelist;\n    if (Object.keys(this.props.NotesData).length > 0) {\n      notelist = this.props.NotesData.map((data) => {\n        return <Note\n          key={data.id}\n          id={data.id}\n          name={data.name}\n          changeViewId={this.props.changeViewId}\n          userNoteDelete={this.props.userNoteDelete}\n          changeFocusNoteId={this.props.changeFocusNoteId}\n          userWordsDataLoad={this.props.userWordsDataLoad}\n        />\n      })\n    } else {\n      notelist = <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">보유한 단어장이 없습니다</h1>;\n    }\n    return (\n      <div>\n        <div>{/* 추천학습 콘텐츠 타이틀 */}\n          <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">My Notes</h1>\n        </div>\n        <div class=\"flex flex-row flex-wrap pt-5\">{/* 추천학습 콘텐츠 박스 */}\n          {notelist}\n        </div>\n\n        <div onClick={this.pressCreateNoteButton} class=\"flex flex-col pt-5 mt-8 h-32 xl:w-80 w-full bg-gradient-to-r from-green-400 to-blue-500 rounded-lg shadow-2xl p-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 cursor-pointer\">\n          <h1 class=\"subpixel-antialiased text-xl font-semibold text-white text-center\">새로운 단어장 생성</h1>\n          <div class=\"flex justify-center\"><svg class=\"w-14 h-14 fill-current text-white text-center\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clip-rule=\"evenodd\" /></svg></div>\n\n        </div>\n      </div>\n    );\n  }\n}\nexport default NoteList;\n","import React, { Component } from 'react';\n\n  class Note extends Component{\n      pressDeleteButton = (event) => {\n        //console.log(event.currentTarget.id);\n        event.stopPropagation(); //이벤트 버블링 방지\n        this.props.userNoteDelete(event.currentTarget.id);\n      }\n      pressModifybutton = (event) => {\n        event.stopPropagation(); //이벤트 버블링 방지\n        this.props.changeFocusNoteId(event.currentTarget.id);\n        this.props.changeViewId(6);\n      }\n      pressNotebutton = (event) => {\n        this.props.changeFocusNoteId(event.currentTarget.id);\n        this.props.changeViewId(7);\n      }\n      render() {\n          return (\n                <div onClick={this.pressNotebutton} key={this.props.key} id={this.props.id} class=\"flex flex-row xl:w-80 w-full h-15 bg-white rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 cursor-pointer\">\n                    <div>\n                    <h1 class=\"subpixel-antialiased text-lg font-semibold text-gray-600\">{this.props.name}</h1>\n                    </div>\n                    <div class=\"flex flex-row absolute right-5\">\n                        <svg id={this.props.id} onClick={this.pressModifybutton} class=\"w-6 h-6 fill-current text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" /><path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\" /></svg>\n                        <svg id={this.props.id} onClick={this.pressDeleteButton} class=\"w-6 h-6 fill-current text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" /></svg>\n                    </div>\n                </div>\n          );\n      }\n    }\n    export default Note;","import React, { Component } from 'react';\n\n  class NoteCreate extends Component{\n    state = {\n        name : \"\",\n    }\n    // 입력폼 값 변경 이벤트\n    inputIsChange = (event) => {\n        //console.log(event.target.name);\n        console.log(event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value //입력값이 변경될때마다 타겟 이름과 값을 받아 state에 새로 갱신합니다\n        });\n    }\n    pressCreateButton = () => {\n        this.props.userNoteCreate(this.state.name);\n    }\n      render() {\n          return (\n                <div class=\"flex flex-col space-y-5\">\n                    <div class=\"flex justify-center\">\n                        <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">Note Create</h1>\n                    </div>\n                    <div class=\"flex justify-center\">\n                        <div class=\"relative w-96\">\n                            <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                                <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                    </svg>\n                                </div>\n                            </div>\n                                <input name=\"name\" type=\"text\" placeholder=\"단어장 이름\" value={this.state.name} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\"/>\n                        </div>\n                    </div>\n                    <div class=\"flex justify-center\">\n                        <hr class=\"w-96\"></hr>\n                    </div>\n                    <div class=\"flex justify-center\">\n                        <button class=\"rounded-lg bg-blue-600 h-10 w-96 text-white\" onClick={this.pressCreateButton}> 생성 </button>\n                    </div>\n                </div>\n          );\n      }\n    }\n    export default NoteCreate;","import React, { Component } from 'react';\n\nclass NotesModify extends Component {\n    constructor(props) {\n        super(props);\n        const noteData = this.props.NotesData.find((element)=>{\n            if(element.id === Number(this.props.focusNoteId)){\n                return true;\n            }\n        });\n        this.state.name = noteData.name;\n    }\n    state = {\n        name: \"\",\n    }\n    // 입력폼 값 변경 이벤트\n    inputIsChange = (event) => {\n        //console.log(event.target.name);\n        console.log(event.target);\n        this.setState({\n            [event.target.name]: event.target.value //입력값이 변경될때마다 타겟 이름과 값을 받아 state에 새로 갱신합니다\n        });\n    }\n    pressModifyButton = () => {\n        //this.props.userNoteCreate(this.state.name);\n        this.props.userNoteModify(this.state.name);\n        this.props.changeViewId(2);\n        \n    }\n    render() {\n        return (\n            <div class=\"flex flex-col space-y-5\">\n                <div class=\"flex justify-center\">\n                    <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">Note Modify</h1>\n                </div>\n                <div class=\"flex justify-center\">\n                    <div class=\"relative w-96\">\n                        <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                            <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                </svg>\n                            </div>\n                        </div>\n                        <input name=\"name\" type=\"text\" placeholder=\"단어장 이름\" value={this.state.name} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                    </div>\n                </div>\n                <div class=\"flex justify-center\">\n                    <hr class=\"w-96\"></hr>\n                </div>\n                <div class=\"flex justify-center\">\n                    <button class=\"rounded-lg bg-blue-600 h-10 w-96 text-white\" onClick={this.pressModifyButton}> 수정 </button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default NotesModify;","import React, { Component } from 'react';\nimport { Word } from '../';\n\nclass WordsList extends Component {\n    constructor(props){\n        super(props);\n        console.log(\"단어 리스트\")\n        this.props.userWordsDataLoad();\n    }\n    state = {\n        MeanHide: false\n    }\n    pressWordCreateButton = () => {\n        this.props.changeViewId(8);\n    }\n    pressMeanHideButton = () => {\n        if (this.state.MeanHide) {\n            this.setState({ MeanHide: false });\n        } else {\n            this.setState({ MeanHide: true });\n\n        }\n    }\n    pressWordTestButton = () => {\n        this.props.changeViewId(10);\n    }\n    componentDidMount() {\n        //console.log(\"단어 리스트\")\n        //this.props.getNote();\n    }\n    render() { //NotesData={this.props.NotesData}\n        let notedata = this.props.NotesData.find((element) => {\n            if (element.id == this.props.focusNoteId) {\n                return true;\n            }\n        });\n        let wordlist;\n        if (Object.keys(this.props.WordsData).length > 0) {\n            wordlist = this.props.WordsData.map((data) => {\n                return <Word\n                    id={data.id}\n                    wordTitle={data.Word_Title}\n                    mean1={data.Mean1}\n                    mean2={data.Mean2}\n                    wrongCount={data.Wrong_Count}\n                    MeanHide={this.state.MeanHide}\n                    userWordsDelete={this.props.userWordsDelete}\n                    changeFocusWordId={this.props.changeFocusWordId}\n                    changeViewId={this.props.changeViewId}\n                />\n            })\n        } else {\n            wordlist = <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">등록된 단어가 없네요!</h1>;\n        }\n        return (\n            <div>\n                <div class=\"flex flex-col xl:flex-row space-y-3\">{/* 단어리스트 콘텐츠 타이틀 */}\n                    <div>\n                        <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">{notedata.name}</h1>\n                    </div>\n                    <div class=\"flex-grow\"></div>\n                    <div class=\"flex flex-col space-y-3 xl:flex-row xl:space-x-3 xl:space-y-0\">\n                        <div>\n                            <div onClick={this.pressWordCreateButton} class=\"flex flex-row w-full xl:w-40 h-15 px-3 p-2 bg-white rounded-lg shadow-sm items-center space-x-1 text-gray-600 transition duration-500 ease-in-out hover:bg-blue-400 transform hover:-translate-y-1 hover:text-white cursor-pointer\">\n                                <svg class=\"w-4 h-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" /><path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\" /></svg>\n                                <h2 class=\"subpixel-antialiased text-sm\">단어 추가</h2>\n                            </div>\n                        </div>\n                        <div>\n                            <div onClick={this.pressWordTestButton} class=\"flex flex-row w-full xl:w-40 h-15 px-3 p-2 bg-white rounded-lg shadow-sm items-center space-x-1 text-gray-600 transition duration-500 ease-in-out hover:bg-blue-400 transform hover:-translate-y-1 hover:text-white cursor-pointer\">\n                                <svg class=\"w-4 h-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" /><path fill-rule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm9.707 5.707a1 1 0 00-1.414-1.414L9 12.586l-1.293-1.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" /></svg>\n                                <h2 class=\"subpixel-antialiased text-sm\">단어 시험</h2>\n                            </div>\n                        </div>\n                        <div>\n                            <div onClick={this.pressMeanHideButton} class=\"flex flex-row w-full xl:w-40 h-15 px-3 p-2 bg-white rounded-lg shadow-sm items-center space-x-1 text-gray-600 transition duration-500 ease-in-out hover:bg-blue-400 transform hover:-translate-y-1 hover:text-white cursor-pointer\">\n                                <svg class=\"w-4 h-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z\" /></svg>\n                                <h2 class=\"subpixel-antialiased text-sm\">{this.state.MeanHide ? '뜻 / 발음 보이기' : '뜻 / 발음 숨기기'}</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"flex flex-col space-y-3 mt-5\">\n                    <div class=\"flex flex-row w-full px-5 py-2 hidden xl:flex\">\n                        <div class=\"flex-1\">\n                            <h2 class=\"subpixel-antialiased text-base text-gray-300\">단어</h2>\n                        </div>\n                        <div class=\"flex-1\">\n                            <h2 class=\"subpixel-antialiased text-base text-gray-300\">뜻</h2>\n                        </div>\n                        <div class=\"flex-1\">\n                            <h2 class=\"subpixel-antialiased text-base text-gray-300\">발음</h2>\n                        </div>\n                        <div class=\"flex-1\">\n                            <h2 class=\"subpixel-antialiased text-base text-gray-300\">오답 횟수</h2>\n                        </div>\n                        <div class=\"flex-2\">\n                            <h2 class=\"subpixel-antialiased text-base text-gray-300\">단어 편집</h2>\n                        </div>\n                    </div>\n\n                    {wordlist}\n\n                </div>\n            </div>\n        );\n    }\n}\nexport default WordsList;\n","import React, { Component } from 'react';\n\nclass Word extends Component {\n    pressWorddeleteButton = (event)=>{\n        //console.log(event.currentTarget.id);\n        this.props.changeFocusWordId(event.currentTarget.id)\n        .then(()=>{\n            this.props.userWordsDelete();\n        });\n    }\n    pressWordModifyButton = (event)=>{\n        //console.log(event.currentTarget.id);\n        this.props.changeFocusWordId(event.currentTarget.id)\n        .then(()=>{\n            this.props.changeViewId(9);\n        });\n    }\n    render() {\n        return (\n            <div class=\"flex flex-col xl:flex-row w-full h-15 p-4 items-center bg-white rounded-lg shadow-sm xl:space-y-0 space-y-1\">\n                <div class=\"flex-1\">\n                    <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">{this.props.wordTitle}</h1>\n                </div>\n                <div class=\"flex-1\">\n                    <h2 class=\"subpixel-antialiased text-base text-gray-600\">{this.props.MeanHide ? '숨김' : this.props.mean1}</h2>\n                </div>\n                <div class=\"flex-1\">\n                    <h2 class=\"subpixel-antialiased text-base text-gray-600\">{this.props.MeanHide ? '숨김' : this.props.mean2}</h2>\n                </div>\n                <div class=\"flex-1\">\n                    <h2 class=\"subpixel-antialiased text-base text-gray-600\">{this.props.wrongCount}</h2>\n                </div>\n                <div class=\"flex flex-row flex-2\">\n                    <svg onClick={this.pressWordModifyButton} id={this.props.id} class=\"w-6 h-6 fill-current text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" /><path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\" /></svg>\n                    <svg onClick={this.pressWorddeleteButton} id={this.props.id} class=\"w-6 h-6 fill-current text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" /></svg>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Word;","import React, { Component } from 'react';\n\n  class WordCreate extends Component{\n    state = {\n        title : \"\",\n        mean1 : \"\",\n        mean2 : \"\"\n    }\n    // 입력폼 값 변경 이벤트\n    inputIsChange = (event) => {\n        //console.log(event.target.name);\n        console.log(event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value //입력값이 변경될때마다 타겟 이름과 값을 받아 state에 새로 갱신합니다\n        });\n    }\n    pressCreateButton = () => {\n        //this.props.userNoteCreate(this.state.name);\n        this.props.userWordsCreate(this.state.title,this.state.mean1,this.state.mean2);\n        this.props.changeViewId(7);\n    }\n      render() {\n          return (\n              <div class=\"flex flex-col space-y-5\">\n                  <div class=\"flex justify-center\">\n                      <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">Create Word</h1>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                      <path fill-rule=\"evenodd\" d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                  </svg>\n                              </div>\n                          </div>\n                          <input name=\"title\" type=\"text\" placeholder=\"단어\" value={this.state.title} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n                                </svg>\n                              </div>\n                          </div>\n                          <input name=\"mean1\" type=\"text\" placeholder=\"단어 뜻\" value={this.state.mean1} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n                                </svg>\n                              </div>\n                          </div>\n                          <input name=\"mean2\" type=\"text\" placeholder=\"발음\" value={this.state.mean2} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <hr class=\"w-96\"></hr>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <button class=\"rounded-lg bg-blue-600 h-10 w-96 text-white\" onClick={this.pressCreateButton}> 생성 </button>\n                  </div>\n              </div>\n          );\n      }\n    }\n    export default WordCreate;","export let testList = {\n    questions: 0, //문제 갯수\n    loadingcount: -1, //문제 다 만들었는지\n    data: {}\n};\n\nexport function createQuestions(wordListdata) {\n    console.log('단어시험 생성');\n    console.log(wordListdata);\n    testList.loadingcount = -1; // 카운트 초기화\n\n    // 단어수 저장\n    const wordListLength = Object.keys(wordListdata).length;\n\n    if (wordListLength < 4) {\n        console.log('단어수가 너무적음 생성실패');\n        throw 'error';\n    } else {\n        console.log(`단어수 조건 충족 문제 생성진행 ${wordListLength}`);\n        //단어수 동기화\n        testList.questions = wordListLength;\n\n        testList.data = wordListdata.map(\n            (data) => {\n                //현재 출제한 문제 key 증가\n                testList.loadingcount++;\n\n                //문제 출제 (문제출제량, 포함되어야할 숫자, 문제당 문항수)\n                console.log(`단어수 ${wordListLength}, 로딩카운트${testList.loadingcount}`);\n                let answer = random(wordListLength, testList.loadingcount, 4);\n                //console.log(wordListdata[answer[0]].Mean1);\n                //문제 포장\n                return { id: testList.loadingcount,wordId:data.id, title: data.Word_Title, correctAnswer:data.Mean1, right:false, one: wordListdata[answer[0]].Mean1, two: wordListdata[answer[1]].Mean1, three: wordListdata[answer[2]].Mean1, four: wordListdata[answer[3]].Mean1 };\n            }\n        );\n\n        testList.loadingcount = wordListLength; // 문제 로딩 완료\n        console.log(`문제 생성완료`);\n        console.log(testList);\n        return testList;\n    }\n}\n\n\n// \n// max = 단어 리스트 전체 갯수, exception = 배열에 무조건 포함되어야 하는수, count = 랜덤추출할 배열길이\nexport function random(max, exception, count) {\n    let random = [];\n    //console.log(`랜덤수 발급 0~${max}까지, ${exception}번호를 무조건 포함한 랜덤값, 갯수${count}`);\n    random.push(exception);\n\n    //포문 (카운트까지 반복 1부터 시작)\n    //포문 현재 넣은값 기준으로 전체 한번찍 반복하는 포문 random.push(Math.floor(Math.random() * max));// 0 ~ (max - 1) 까지의 정수 값을 배열에 넣음\n    for (var a = 1; random.length < count; a++) {\n        random.push(Math.floor(Math.random() * max));\n        //console.log(`${a}번째 값 생성`);\n        //console.log(random);\n        for (var b = 0; b < random.length; b++) {\n            //console.log(`${a}번째 값 중복체크`);\n            if (a !== b) {\n                if (random[a] === random[b]) {\n                    //console.log(`새로 발급한 ${random[a]}와 ${random[b]}가 중복입니다`);\n                    random[a] = Math.floor(Math.random() * max);\n                    //console.log(`새로 발급`);\n                    //console.log(random);\n                    //console.log(`----------`);\n                    b = -1;\n                }\n            }\n        }\n    }\n    //console.log(`결과`);\n    //console.log(random);\n    //console.log(`--------------------`);\n    //console.log(`셔플 시작`);\n    let shufflecount = 0;\n    //셔플\n    while (shufflecount === 0) {\n        shufflecount = Math.floor(Math.random() * count)\n    }\n    //console.log(`${shufflecount} 이동 ${random[0]} < ${random[shufflecount]}`);\n    random[0] = random[shufflecount];\n\n    //console.log(`${shufflecount} 이동 ${random[shufflecount]} < ${exception}`);\n    random[shufflecount] = exception;\n\n    //console.log(`셔플 완료`);\n    console.log(random);\n    //console.log(`--------------------`);\n    return random;\n\n}\n","import React, { Component } from 'react';\nimport * as exam from '../../service/WordTest';\nimport { Loading } from '../';\n\nclass WordsTest extends Component {\n    state = {\n        page: 0, //시험 배열 접근에 사용되는 상태\n        questionsCount: 0, // 총 퀴즈 수\n        wrongCount: 0, // 틀린 횟수\n        questionsData: \"\", //문제 데이터\n        viewid: 0, // 페이지 설정에 사용되는 상태 0: 로딩, 1: 시험시작전 안내, 2: 시험, 3:결과, 4: 단어수가 적을경우의 오류처리\n        noteLearningDate: \"\",\n        toDay: \"\"\n    }\n    constructor(props) {\n        super(props);\n        // 단어 리스트를 content state에서 받아와서 시험문제 제작\n        const noteData = this.props.NotesData.find((data) => {\n            if (data.id === Number(this.props.focusNoteId)) {\n                return true;\n            }\n        });\n\n        Date.prototype.yyyymmdd = function () { // 마지막 학습일, 오늘 날자 비교를 위해 저장\n            var yyyy = this.getFullYear().toString();\n            var mm = (this.getMonth() + 1).toString();\n            var dd = this.getDate().toString();\n            return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n        };\n\n        try {\n            //시험문제\n            const questionsList = exam.createQuestions(this.props.WordsData);\n            const date_toDay = new Date();\n            const date_noteLearningDate = new Date(noteData.Learning_Day);\n            console.log(`${date_noteLearningDate.yyyymmdd()} ${date_toDay.yyyymmdd()}`)\n            // state 를초기화 합니다\n            // 이떄는 무조건 로딩화면을 출력합니다 로딩이 다 되었을경우 didmount레벨 에서 로딩을 해제합니다\n            this.state = { page: 0, questionsCount: questionsList.questions - 1, wrongCount: 0, viewid: 0, questionsData: questionsList, noteLearningDate: date_noteLearningDate.yyyymmdd(), toDay: date_toDay.yyyymmdd() };\n        } catch (error) {\n            this.state = { page: 0, questionsCount: 0, wrongCount: 0, viewid: 4, };\n        }\n    }\n    loadingCompoment(ThisViewId, callback) {\n        setTimeout(() => {\n          if (this.props.viewId === ThisViewId) { // 사용자가 뷰를 이동하지않고 계속 기다릴경우\n            if (this.props.api_fetching === false) { // API 질의가 진행중이 아닐경우\n              this.setState({ viewid: 1 }); // 내부 뷰 상태를 설정합니다 1: 시험시작전 안내\n            }else{ //api 모듈이 계속 질의 상태일경우\n              callback(10, this.loadingCompoment.bind(this)); //더 기다립니다..\n            }\n          } //기다리지 않고 뷰를 이탈했을 경우 그냥 종료합니다\n        }, 1000);\n      }\n    componentDidMount() {\n        // 지정된 시간 이후에 content state.api 가 계속 질의 중인지 확인합니다\n        // 작업을 다 끝낸 상태면 화면으로 리 랜더링 하게됩니다 작업중일경우 callback으로 다시 로딩함수를 호출합니다\n        if (this.state.viewid !== 4) { // 오류로 진행이 불가능하지 않을 경우\n            this.loadingCompoment(10,this.loadingCompoment);\n        }\n    }\n    pressNextButton = () => {\n        this.setState({ viewid: 2 }); // 시험 페이지로\n    }\n    pressAnswerButton = (event) => {\n        if (this.state.questionsData.data[this.state.page].correctAnswer == event.target.id) { //문제 데이터와 선택한 div 데이터를 비교해 정답인지 체크\n            let news = { ...this.state.questionsData }; // 1. 문제데이터 내부 복사\n            news.data[this.state.page].right = true; // 2.정답처리\n            this.setState({ questionsData: news }); // 3.전체 데이터 갱신\n        } else { // 오답일 경우\n            this.setState({ wrongCount: this.state.wrongCount + 1 }); // state.wrongCount를 +1 합니다\n            this.props.userWordsWrongCountUpdate(this.state.questionsData.data[this.state.page].wordId); //서버 오답 카운트 증가 요청\n        }\n\n        if (this.state.questionsCount === this.state.page) { //시험이 종료된경우\n            this.setState({ viewid: 3 }); //결과 페이지로 이동\n\n            if (this.state.wrongCount === 0) {//만점일 경우\n                if (this.props.noteLearningDate !== this.props.toDay) { //마지막 학습일자가 오늘이 아닐경우에만 학습 상태를 갱신\n                    console.log(`마지막 학습일이 ${this.props.noteLearningDate} 인 단어장입니다 학습일자를 갱신합니다.`)\n                    this.props.userNoteLearningDayUpdate();\n                }\n            }\n        } else {\n            this.setState({ page: this.state.page + 1 }); // 다음 시험 페이지로\n        }\n    }\n    render() {\n        let content;\n        switch (this.state.viewid) {\n            case 1: // 시험 시작전 안내 사항\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center space-y-5\">\n                                <h1 class=\"subpixel-antialiased text-3xl font-semibold text-gray-600 text-center\">주의 사항</h1>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">1.단어시험에서 만점을 받는다면 통과됩니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">2.단어시험에 통과하게 되면 마지막 학습 일자, 복습 횟수가 갱신됩니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">3.당일 생성된 단어장은 다음날부터 학습 일자, 복습 횟수를 갱신할 수 있습니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">4.당일 통과한 단어장은 그날은 학습 일자, 복습 횟수가 추가로 갱신되지 않습니다</h2>\n                            </div>\n                            <div class=\"w-full\">\n                                <div onClick={this.pressNextButton} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer text-center\">\n                                    시험 시작하기\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            case 2: //시험\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center\">\n                                <h1 class=\"subpixel-antialiased text-lg font-semibold text-gray-300\">{this.state.page} / {this.state.questionsData.questions - 1}</h1>\n                                <h1 class=\"subpixel-antialiased text-7xl font-semibold text-gray-600\">{this.state.questionsData.data[this.state.page].title}</h1>\n                            </div>\n                            <div class=\"w-full\">\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].one} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].one}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].two} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].two}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].three} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].three}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].four} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].four}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            case 3: //결과 종합\n                let questionsWordList;\n                questionsWordList = this.state.questionsData.data.map((data) => {\n                    if (data.right) {\n                        return (\n                            <div class=\"flex flex-row w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 subpixel-antialiased text-2xl font-semibold text-gray-600\">\n                                <div class=\"flex-1\">{data.title}</div>\n                                <div class=\"flex-1 text-base\">{data.correctAnswer}</div>\n                                <div class=\"flex-2\"><svg class=\"w-7 h-7 fill-current text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"> <path fill-rule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clip-rule=\"evenodd\" /></svg></div>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div class=\"flex flex-row w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 subpixel-antialiased text-2xl font-semibold text-gray-600\">\n                                <div class=\"flex-1\">{data.title}</div>\n                                <div class=\"flex-1 text-base\">{data.correctAnswer}</div>\n                                <div class=\"flex-2\"><svg class=\"w-7 h-7 fill-current text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /></svg></div>\n                            </div>\n                        );\n                    }\n                });\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <h1 class=\"subpixel-antialiased text-7xl font-semibold text-gray-600\">시험 종료!</h1>\n                            {questionsWordList}\n                            {this.state.wrongCount === 0 ? (<h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">단어시험에 통과하셨습니다!</h2>) : (<h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">아쉽지만 단어시험에 통과하지 못했습니다 다시 도전해 보세요 </h2>)}\n                        </div>\n                    </div>\n\n                );\n                break;\n            case 4: //오류\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center space-y-5\">\n                                <h1 class=\"subpixel-antialiased text-3xl font-semibold text-gray-600 text-center\">단어가 너무 적어요!</h1>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">단어장에 등록된 단어가 4개 이상 되어야 합니다.</h2>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            default: // 로딩 화면 또는 상정하지 못한 오류 처리\n                content = <Loading />;\n                break;\n        }\n\n        //랜더\n        return (\n            <div>\n                {content}\n            </div>\n        );\n    }\n}\nexport default WordsTest;\n","import React, { Component } from 'react';\n\nclass WordsModify extends Component {\n    constructor(props) {\n        super(props);\n        const wordData = this.props.WordsData.find((element)=>{\n            if(element.id === Number(this.props.focusWordId)){\n                return true;\n            }\n        });\n        console.log(wordData);\n        this.state.title = wordData.Word_Title;\n        this.state.mean1 = wordData.Mean1;\n        this.state.mean2 = wordData.Mean2;\n    }\n    state = {\n        title : \"\",\n        mean1 : \"\",\n        mean2 : \"\"\n    }\n    // 입력폼 값 변경 이벤트\n    inputIsChange = (event) => {\n        //console.log(event.target.name);\n        console.log(event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value //입력값이 변경될때마다 타겟 이름과 값을 받아 state에 새로 갱신합니다\n        });\n    }\n    pressCreateButton = () => {\n        this.props.userWordsModify(this.state.title,this.state.mean1,this.state.mean2);\n        this.props.changeViewId(7);\n    }\n      render() {\n          return (\n              <div class=\"flex flex-col space-y-5\">\n                  <div class=\"flex justify-center\">\n                      <h1 class=\"subpixel-antialiased text-2xl font-semibold text-gray-600\">Modify Word</h1>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                      <path fill-rule=\"evenodd\" d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n                                  </svg>\n                              </div>\n                          </div>\n                          <input name=\"title\" type=\"text\" placeholder=\"단어\" value={this.state.title} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n                                </svg>\n                              </div>\n                          </div>\n                          <input name=\"mean1\" type=\"text\" placeholder=\"단어 뜻\" value={this.state.mean1} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <div class=\"relative w-96\">\n                          <div class=\"absolute flex border border-transparent left-0 top-0 h-full w-10\">\n                              <div class=\"flex items-center justify-center rounded-tl rounded-bl z-10 bg-gray-100 text-gray-600 text-lg h-full w-full\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"h-5 w-5 text-gray-600\">\n                                    <path fill-rule=\"evenodd\" d=\"M3 7a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 13a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n                                </svg>\n                              </div>\n                          </div>\n                          <input name=\"mean2\" type=\"text\" placeholder=\"발음\" value={this.state.mean2} onChange={this.inputIsChange} class=\"text-sm sm:text-base relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2 pl-12\" />\n                      </div>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <hr class=\"w-96\"></hr>\n                  </div>\n                  <div class=\"flex justify-center\">\n                      <button class=\"rounded-lg bg-blue-600 h-10 w-96 text-white\" onClick={this.pressCreateButton}> 수정 </button>\n                  </div>\n              </div>\n          );\n      }\n    }\nexport default WordsModify;","export const api_url = \"http://ec2-15-164-214-135.ap-northeast-2.compute.amazonaws.com/\";","import axios from 'axios';\nimport * as settings from './settings';\n\nexport function getToken(id, password) {\n  console.log(`api 토큰 로드`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.post(\n    `${settings.api_url}token`,\n    {\n      //...data\n      \"userid\": `${id}`,\n      \"password\": `${password}`\n    });\n}\n\nexport function getNotes(usertoken, userid) {\n  console.log(`api 노트 리스트 로드`)\n  return axios.get(\n    `${settings.api_url}api/users/${userid}/notes`,\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\n\nexport function createNote(usertoken, userid, notename) {\n  console.log(`api 노트 생성`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.post(\n    `${settings.api_url}api/users/${userid}/notes`,\n    {\n      //...data\n      \"notename\": `${notename}`,\n    },\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function modifyNote(usertoken, userid, notename, noteid) {\n  console.log(`api 노트 수정`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.put(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}`,\n    {\n      //...data\n      \"notename\": `${notename}`,\n    },\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function deleteNote(usertoken, userid, noteid) {\n  console.log(`api 노트 삭제`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.delete(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}`,\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function updatedNote(usertoken, userid, noteid) {\n  console.log(`api 노트 학습일자 갱신`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.put(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/updated-date`,{},\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function getWord(usertoken, userid, noteid) {\n  console.log(`api 단어 리스트 로드`)\n  return axios.get(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/words`,\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function createWord(usertoken, userid, noteid, title, mean1, mean2) {\n  console.log(`api 단어 생성`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.post(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/words`,\n    {\n      \"title\": `${title}`,\n      \"mean1\": `${mean1}`,\n      \"mean2\": `${mean2}`\n    },\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function modifyWord(usertoken, userid, noteid, wordid, title, mean1, mean2) {\n  console.log(`api 단어 수정`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.put(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/words/${wordid}`,\n    {\n      //...data\n      \"title\": `${title}`,\n      \"mean1\": `${mean1}`,\n      \"mean2\": `${mean2}`\n    },\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function deleteWord(usertoken, userid, noteid, wordid) {\n  console.log(`api 단어 삭제`)\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.delete(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/words/${wordid}`,\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\nexport function wrongCountWord(usertoken, userid, noteid, wordid) {\n  console.log(`api 단어 틀림 카운트 증가`)\n\n  console.log(usertoken);\n  //console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.put(\n    `${settings.api_url}api/users/${userid}/notes/${noteid}/words/${wordid}/wrong-count`,{},\n    {\n      headers: {\n        token: usertoken\n      }\n    }\n  );\n}\n/*\nexport function getToken2(id, password){\n  console.log(`(${id}, ${password} ${settings.api_url})`)\n  return axios.post(\n    `${settings.api_url}token`,\n      {\n      //...data\n      \"name\" : `${id}`,\n      \"password\" : `${password}`\n      },\n      {\n      headers: {\n        \"token\": `${token}`\n      }\n    });\n  }\n  */","import React, { Component } from 'react';\nimport { Main } from '../../components';\nimport { Login } from '../../components';\n\nimport * as service from '../../service/babelfish';\n\nclass Content extends Component {\n  state = {\n    viewid: 0, // 미로그인 : 0, 로그인성공 : 1, \n    api_fetching: false, // 질의가 진행중일경우 true\n    error: false, // 에러가 발생했을경우\n    error_msg: \"\", //  에러 메시지 코드\n    userid: \"\", //유저 아이디\n    notes: {}, //보유 노트 리스트\n    words: {}, // 단어 리스트 focusNoteId 기반\n    focusNoteId: 0,\n    focusWordId: 0\n  }\n  logindataManipulation = async (data) => {\n    //console.log(`데이터 연결 정상`);\n    //console.log(data);\n    try {\n      this.setState({ api_fetching: true });// 질의 진행 상태설정\n      console.log(data.email);\n      console.log(data.password);\n      const post = await service.getToken(data.email, data.password); //질의\n      console.log()\n      sessionStorage.setItem(\"token\", post.data.token); // 토큰정보 세션에 저장\n\n      //console.log(sessionStorage.getItem(\"token\")); // 토큰정보 출력\n      this.setState({ viewid: 1, api_fetching: false, userid: data.email });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n    //console.log(`분기완료 상태 출력`);\n    //console.log(this.state);\n  }\n  userNoteDataLoad = async () => {\n    try {\n      //TODO\n      //1.상태 설정 - 질의 진행중\n      //2.API 통신 진행\n      //3.상태 설정 - 질의 종료 및 데이터 동기화\n      console.log(`시작`);\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      const get = await service.getNotes(sessionStorage.getItem(\"token\"), this.state.userid);\n      //3.상태 설정 - 질의 종료 및 데이터 동기화\n      this.setState({ api_fetching: false, notes: get.data.data });\n      //console.log(get.data.data); //단어장 리스트\n    } catch (error) {\n      // 토큰정보가 유효하지 않을경우 로그인창으로\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        if (error.response.status === 404) {\n          this.setState({ api_fetching: false, error: false, error_msg: \"\", notes: {} });\n        } else {\n          this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n        }\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n    console.log(`종료`);\n    //console.log(`분기완료 상태 출력`);\n    //console.log(this.state);\n  }\n  userNoteCreate = async (notename) => {\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.createNote(sessionStorage.getItem(\"token\"), this.state.userid, notename);\n      //3. 노트 리스트 동기화\n      await this.userNoteDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 2, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userNoteDelete = async (noteid) => {\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.deleteNote(sessionStorage.getItem(\"token\"), this.state.userid, noteid);\n      //3. 노트 리스트 동기화\n      await this.userNoteDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 2, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userWordsDataLoad = async () => {\n    try {\n      //TODO\n      //1.상태 설정 - 질의 진행중\n      //2.API 통신 진행\n      //3. 노트 리스트 동기화\n      //4.상태 설정 - 질의 종료\n      this.setState({ api_fetching: true });\n      const get = await service.getWord(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId);\n      this.setState({ viewid: 7, api_fetching: false, words: get.data.data });// 질의 성공 상태설정\n    } catch (error) {\n      // 토큰정보가 유효하지 않을경우 로그인창으로\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        if (error.response.status === 404) {\n          this.setState({ words: {} }); // 질의결과가 없는경우 단어장 리스트 초기화\n        } else {\n          this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n        }\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userWordsDelete = async () => {\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.deleteWord(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId, this.state.focusWordId);\n      //3. 단어 리스트 동기화\n      await this.userWordsDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 7, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userWordsCreate = async (title, mean1, mean2) => {\n\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.createWord(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId, title, mean1, mean2);\n      //3. 노트 리스트 동기화\n      await this.userWordsDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 7, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userNoteModify = async (notename) => { //usertoken, userid, notename, noteid\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.modifyNote(sessionStorage.getItem(\"token\"), this.state.userid, notename, this.state.focusNoteId);\n      //3. 노트 리스트 동기화\n      await this.userNoteDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 2, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userWordsModify = async (title, mean1, mean2) => { //modifyWord(usertoken, userid, noteid, wordid, title, mean1, mean2) {\n\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.modifyWord(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId, this.state.focusWordId, title, mean1, mean2);\n      //3. 노트 리스트 동기화\n      await this.userWordsDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ viewid: 7, api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userNoteLearningDayUpdate = async () => { //updatedNote(usertoken, userid, noteid) {\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.updatedNote(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId);\n      //3. 노트 리스트 동기화\n      await this.userNoteDataLoad();\n      //4.상태 설정 - 질의 종료\n      this.setState({ api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  userWordsWrongCountUpdate = async (wordid) => { //wrongCountWord(usertoken, userid, noteid, wordid)\n    //TODO\n    //1.상태 설정 - 질의 진행중\n    //2.API 통신 진행\n    //3. 노트 리스트 동기화\n    //4.상태 설정 - 질의 종료\n    try {\n      //1.상태 설정 - 질의 진행중\n      this.setState({ api_fetching: true });\n      //2.API 통신 진행\n      await service.wrongCountWord(sessionStorage.getItem(\"token\"), this.state.userid, this.state.focusNoteId, wordid);\n      //4.상태 설정 - 질의 종료\n      this.setState({ api_fetching: false });// 질의 성공 상태설정\n    } catch (error) {\n      if (error.response) {\n        // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n        //console.log(error.response.data); // 서버응답\n        //console.log(error.response.status); //400\n        //console.log(error.response.headers);\n        this.setState({ api_fetching: false, error: true, error_msg: error.response.data.msg_code });// 질의 진행 상태설정\n      }\n      else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        //console.log(error.request);\n        this.setState({ api_fetching: false, error: true, error_msg: \"api_server_offline_점검중입니다\" });// 질의 진행 상태설정\n      }\n      else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n        this.setState({ api_fetching: false, error: true, error_msg: \"front_server_error\" });// 질의 진행 상태설정\n      }\n      console.log(error.config);\n    }\n  }\n  //상태변경\n  // 모든 컴포넌트 뷰아이디 상태변경 처리\n  changeViewId = (value) => {\n    this.setState({ viewid: Number(value) });\n  }\n  changeFocusNoteId = async (value) => {\n    this.setState({ focusNoteId: value });\n    //this.userWordsDataLoad();\n  }\n  changeFocusWordId = async (value) => {\n    this.setState({ focusWordId: value });\n  }\n  modalHide = () => {\n    if(this.state.error_msg === '4'){\n      this.setState({ error: false, error_msg: \"\", viewid:0 });\n    }else{\n      this.setState({ error: false, error_msg: \"\" });\n    }\n  }\n  modalText = () => {\n    switch (this.state.error_msg) {\n      case 't1':\n        return '아이디 또는 패스워드에 허용되지 않는 문자가 있습니다';\n      case 't2':\n        return '아이디 또는 패스워드가 올바르지 않습니다';\n      case '4':\n        return '로그아웃 되었습니다 다시 로그인해 주세요';\n      case 'n2-1':\n        return '노트 이름에 허용되지 않는 문자가 있거나 노트 이름이 너무 깁니다';\n        case 'n3-1':\n          return '노트 이름에 허용되지 않는 문자가 있거나 노트 이름이 너무 깁니다';\n      case 'n5-1':\n        return '노트 이름에 허용되지 않는 문자가 있거나 노트 이름이 너무 깁니다';\n      case 'w2-1':\n        return '허용되지 않는 문자 또는 텍스트가 너무 길어 등록에 실패했습니다';\n      case 'w3-1':\n        return '허용되지 않는 문자 또는 텍스트가 너무 길어 등록에 실패했습니다';\n      default:\n        return `비정상적인 요청입니다 ${this.state.error_msg}`;\n    }\n  }\n  render() {\n    const errmsg = this.modalText();\n    const modal = this.state.error ? (\n      <div class=\"flex fixed h-full w-full items-center justify-center bg-transparent z-50\">\n        <div className=\"w-full xl:w-96 h-15 bg-white rounded-lg shadow-md p-4\">\n          <div>\n            <h1 class=\"subpixel-antialiased text-gray-600 mb-3\">{errmsg}</h1>\n          </div>\n          <hr ></hr>\n          <div class=\"flex flex-row-reverse\">\n            <button onClick={this.modalHide} class=\"text-blue-400 mt-3\">확인</button>\n          </div>\n        </div>\n      </div>\n    ) : null;\n    return (\n      <div>\n        {modal}\n        {this.state.viewid === 0 && (<Login logindataManipulation={this.logindataManipulation} />)/*로그인 필요시*/}\n\n        {this.state.viewid >= 1 && (<Main\n          userNoteDataLoad={this.userNoteDataLoad}  // 노트 리스트 동기화\n          NotesData={this.state.notes}  // 노트 리스트 데이터\n          WordsData={this.state.words} //단어 리스트 데이터\n          focusNoteId={this.state.focusNoteId} // 현재 위치 노트 아이디\n          focusWordId={this.state.focusWordId} // 현재 위치 단어 아이디\n          api_fetching={this.state.api_fetching} // api 질의 진행 상태\n          changeViewId={this.changeViewId} // 뷰 상태 데이터 변경\n          viewId={this.state.viewid} // 뷰 상태 데이터\n          userNoteCreate={this.userNoteCreate} //노트 생성\n          userNoteDelete={this.userNoteDelete} // 노트 삭제\n          userNoteModify={this.userNoteModify} //노트수정\n          changeFocusNoteId={this.changeFocusNoteId}//보고있는 노트 아이디\n          changeFocusWordId={this.changeFocusWordId}//보고있는 단어 아이디\n          userWordsDataLoad={this.userWordsDataLoad}//단어 리스트 api\n          userWordsDelete={this.userWordsDelete} //유저 단어 삭제\n          userWordsCreate={this.userWordsCreate} //유저 단어 생성\n          userWordsModify={this.userWordsModify}//유저 단어 수정\n          userNoteLearningDayUpdate={this.userNoteLearningDayUpdate}\n          userWordsWrongCountUpdate={this.userWordsWrongCountUpdate}\n        />)}\n      </div>\n    );\n  }\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport { Content } from './containers';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Content/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}