[{"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Main/Loading.js":"1","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Main/Main.js":"2","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/WordsTest.js":"3","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Dashboard/Dashboard.js":"4","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/containers/Content/Content.js":"5","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Notes/NotesList.js":"6","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/App.js":"7","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/Word.js":"8","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Dashboard/RecommendWidget.js":"9","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Login/Login.js":"10","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/WordsList.js":"11","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/service/settings.js":"12"},{"size":1872,"mtime":1611947586382,"results":"13","hashOfConfig":"14"},{"size":10064,"mtime":1612109554855,"results":"15","hashOfConfig":"14"},{"size":13064,"mtime":1612098408137,"results":"16","hashOfConfig":"14"},{"size":11379,"mtime":1612166986159,"results":"17","hashOfConfig":"14"},{"size":25406,"mtime":1612172464265,"results":"18","hashOfConfig":"14"},{"size":2122,"mtime":1612099318419,"results":"19","hashOfConfig":"14"},{"size":248,"mtime":1611654823915,"results":"20","hashOfConfig":"14"},{"size":2543,"mtime":1612010581068,"results":"21","hashOfConfig":"14"},{"size":0,"mtime":1612024607613,"results":"22","hashOfConfig":"14"},{"size":6104,"mtime":1611855318515,"results":"23","hashOfConfig":"14"},{"size":6352,"mtime":1612003978266,"results":"24","hashOfConfig":"14"},{"size":52,"mtime":1612160768760,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vriujd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Main/Loading.js",[],["53","54"],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Main/Main.js",["55"],"import React, { Component } from 'react';\nimport { NoteList } from '../';\nimport { NoteCreate } from '../';\nimport { WordsList } from '../';\nimport { WordsCreate } from '../';\nimport { WordsTest } from '../';\nimport { Loading } from '../';\nimport { WordsModify } from '../';\nimport { NotesModify } from '../';\nimport { Dashboard } from '../';\n\nimport './Header.css';\n\nclass Main extends Component {\n  componentDidMount() {\n    console.log(\"메인 뷰\")\n    //this.props.getNote(); //노트 데이터 받아옴\n  }\n  pressMenuButton = (event) => {\n    this.props.changeViewId(event.currentTarget.id);\n  }\n  render() {\n    let content;\n    switch (this.props.viewId) {\n      case 1:\n        content = <Dashboard \n        api_fetching={this.props.api_fetching}\n        viewId={this.props.viewId}\n        NotesData={this.props.NotesData}\n        changeViewId={this.props.changeViewId}\n        userNoteDataLoad={this.props.userNoteDataLoad}\n        />;\n        break;\n      case 2:\n        content = <NoteList\n          NotesData={this.props.NotesData}\n          changeViewId={this.props.changeViewId}\n          userNoteDelete={this.props.userNoteDelete}\n          userNoteDataLoad={this.props.userNoteDataLoad}\n          changeFocusNoteId={this.props.changeFocusNoteId}\n          userWordsDataLoad={this.props.userWordsDataLoad}\n        />;\n        break;\n      case 3:\n        content = <Loading />;\n        break;\n      case 4:\n        content = <Loading />;\n        break;\n      case 5:\n        content = <NoteCreate userNoteCreate={this.props.userNoteCreate} />;\n        break;\n      case 6:\n        content = <NotesModify\n          focusNoteId={this.props.focusNoteId}\n          NotesData={this.props.NotesData}\n          userNoteModify={this.props.userNoteModify}\n          changeViewId={this.props.changeViewId}\n        />;\n        break;\n      case 7:\n        content = <WordsList\n          changeViewId={this.props.changeViewId}\n          WordsData={this.props.WordsData}\n          NotesData={this.props.NotesData}\n          changeFocusWordId={this.props.changeFocusWordId}\n          userWordsDelete={this.props.userWordsDelete} //유저 단어 삭제\n          focusNoteId={this.props.focusNoteId}\n          userWordsDataLoad={this.props.userWordsDataLoad}\n        />;\n        break;\n      case 8:\n        content = <WordsCreate\n          userWordsCreate={this.props.userWordsCreate}\n          changeViewId={this.props.changeViewId}\n        />;\n        break;\n      case 9:\n        content = <WordsModify\n        WordsData={this.props.WordsData}\n        focusWordId={this.props.focusWordId} \n        userWordsModify={this.props.userWordsModify}//유저 단어 수정\n        changeViewId={this.props.changeViewId}\n         />;\n        break;\n      case 10:\n        content = <WordsTest\n          WordsData={this.props.WordsData}\n          changeViewId={this.props.changeViewId}\n          viewId={this.props.viewId}\n          userNoteLearningDayUpdate={this.props.userNoteLearningDayUpdate}\n          userWordsWrongCountUpdate={this.props.userWordsWrongCountUpdate}\n          api_fetching={this.props.api_fetching}\n          focusNoteId={this.props.focusNoteId}\n          NotesData={this.props.NotesData}\n        />;\n        break;\n    }\n    return (\n      <div class=\"w-full h-full\">\n        {/* 네비게이션 */}\n        <div class=\"xl:flex w-full h-full\">\n          <div class=\"flex pt-8 space-y-10 h-48 w-screen flex-col xl:h-full xl:w-24 bg-white rounded-lg\">\n            <div class=\"flex justify-center w-full\">\n              <svg id=\"Layer_1\" class=\"w-8 h-8 fill-current text-blue-500\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m304.2 190.666h72.3c42.833 0 111.4 1.972 111.4-63.2 0-56.859-71.055-127.466-175.667-127.466h-8.033c-50.122 0-97.631 16.978-135.976 48.2h-16.674c-70.388 0-127.45 56.947-127.45 127.466 0 8.284 6.716 15 15 15h50.722c-.957 8.294-1.456 16.692-1.456 25.167 0 119.222 96.466 215.833 215.833 215.833h1.815l75.946 75.946c5.846 5.846 15.362 5.859 21.228-.015 15.703-15.706 24.35-36.584 24.35-58.792 0-17.521-5.384-34.216-15.371-48.199 9.987-13.98 15.371-30.677 15.371-48.201 0-22.21-8.65-43.091-24.364-58.806-5.858-5.859-15.356-5.858-21.213 0l-75.934 75.934h-1.827c-49.378 0-89.434-39.961-89.434-89.433.001-49.377 39.962-89.434 89.434-89.434zm23.033-160.092c83.486 6.424 130.667 62.563 130.667 96.893 0 28.401-20.324 33.2-81.4 33.2h-49.267zm0 360.178 63.827-63.826c4.23 7.724 6.478 16.429 6.478 25.479 0 14.197-5.529 27.545-15.569 37.585-.107.107-.221.224-.324.334-5.557 5.903-5.409 15.162.324 20.895 10.041 10.041 15.57 23.389 15.57 37.585 0 9.051-2.247 17.756-6.478 25.48l-63.827-63.827v-19.705zm-271.995-230.086c4.276-27.873 27.514-73.343 81.802-81.399-19.714 24.04-33.79 51.718-41.581 81.399zm129.529 119.434c0 63.796 49.863 115.659 112.467 119.234v2.203c-99.253-3.677-178.867-85.568-178.867-185.704s79.613-182.028 178.867-185.705v130.736c-62.688 3.582-112.467 55.519-112.467 119.236zm206.733-184.767c0-8.28-6.72-15-15-15s-15 6.72-15 15 6.72 15 15 15 15-6.72 15-15z\" /></g></svg>\n            </div>\n            <hr class=\"m-5\"></hr>\n            <div class=\"flex flex-row space-x-10 justify-center xl:flex-col xl:space-y-10 xl:space-x-0\">\n\n              {/* 홈 메뉴 1*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"1\" >\n                {this.props.viewId === 1 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" /></svg>\n              </div>\n              {/* 단어장 리스트 2*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"2\" >\n                {this.props.viewId === 2 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path d=\"M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z\" /></svg>\n              </div>\n              {/* 다국어 3*/}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"3\">\n                {this.props.viewId === 3 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z\" clip-rule=\"evenodd\" /></svg>\n              </div>\n              {/* 다크모드 4 */}\n              <div class=\"flex justify-center cursor-pointer text-gray-300 hover:text-blue-500 duration-300 ease-in-out\" onClick={this.pressMenuButton} id=\"4\">\n                {this.props.viewId === 4 && (<svg class=\"w-4 h-4 fill-current animate-bounce absolute -mt-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" /></svg>)}\n                <svg class=\"w-6 h-6 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" /></svg>\n              </div>\n            </div>\n          </div>\n          {/* 콘텐트 박스 */}\n          <div class=\"w-full h-full xl:h-auto xl:overflow-auto\">\n            <div class=\"hidescroll bg-gray-100 bottom-0 right-0 p-8 w-full h-full rounded-t-lg xl:rounded-l-3xl xl:p-16\">\n              {/* 콘텐츠 내용 */}\n              {content}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/WordsTest.js",["56","57","58"],"import React, { Component } from 'react';\nimport * as exam from '../../service/WordTest';\nimport { Loading } from '../';\n\nclass WordsTest extends Component {\n    state = {\n        page: 0, //시험 배열 접근에 사용되는 상태\n        questionsCount: 0, // 총 퀴즈 수\n        wrongCount: 0, // 틀린 횟수\n        questionsData: \"\", //문제 데이터\n        viewid: 0, // 페이지 설정에 사용되는 상태 0: 로딩, 1: 시험시작전 안내, 2: 시험, 3:결과, 4: 단어수가 적을경우의 오류처리\n        noteLearningDate: \"\",\n        toDay: \"\"\n    }\n    constructor(props) {\n        super(props);\n        // 단어 리스트를 content state에서 받아와서 시험문제 제작\n        const noteData = this.props.NotesData.find((data) => {\n            if (data.id === Number(this.props.focusNoteId)) {\n                return true;\n            }\n        });\n\n        Date.prototype.yyyymmdd = function () { // 마지막 학습일, 오늘 날자 비교를 위해 저장\n            var yyyy = this.getFullYear().toString();\n            var mm = (this.getMonth() + 1).toString();\n            var dd = this.getDate().toString();\n            return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n        };\n\n        try {\n            //시험문제\n            const questionsList = exam.createQuestions(this.props.WordsData);\n            const date_toDay = new Date();\n            const date_noteLearningDate = new Date(noteData.Learning_Day);\n            console.log(`${date_noteLearningDate.yyyymmdd()} ${date_toDay.yyyymmdd()}`)\n            // state 를초기화 합니다\n            // 이떄는 무조건 로딩화면을 출력합니다 로딩이 다 되었을경우 didmount레벨 에서 로딩을 해제합니다\n            this.state = { page: 0, questionsCount: questionsList.questions - 1, wrongCount: 0, viewid: 0, questionsData: questionsList, noteLearningDate: date_noteLearningDate.yyyymmdd(), toDay: date_toDay.yyyymmdd() };\n        } catch (error) {\n            this.state = { page: 0, questionsCount: 0, wrongCount: 0, viewid: 4, };\n        }\n    }\n    loadingCompoment(ThisViewId, callback) {\n        setTimeout(() => {\n            if (this.props.api_fetching === false) { // API 질의가 진행중이 아닐경우\n                //console.log(`${this.props.viewId} ${ThisViewId}`)\n                if (this.props.viewId === ThisViewId) { // 사용자가 뷰를 이동하지 않고 유지 했을 경우\n                    this.setState({ viewid: 1 }); // 내부 뷰 상태를 설정합니다 1: 시험시작전 안내\n                }\n            } else {\n                callback();\n            }\n        }, 2000);\n    }\n    componentDidMount() {\n        // 지정된 시간 이후에 content state.api 가 계속 질의 중인지 확인합니다\n        // 작업을 다 끝낸 상태면 화면으로 리 랜더링 하게됩니다 작업중일경우 callback으로 다시 로딩함수를 호출합니다\n        if (this.state.viewid !== 4) { // 오류로 진행이 불가능하지 않을 경우\n            this.loadingCompoment(10,this.loadingCompoment);\n        }\n    }\n    pressNextButton = () => {\n        this.setState({ viewid: 2 }); // 시험 페이지로\n    }\n    pressAnswerButton = (event) => {\n        if (this.state.questionsData.data[this.state.page].correctAnswer == event.target.id) { //문제 데이터와 선택한 div 데이터를 비교해 정답인지 체크\n            let news = { ...this.state.questionsData }; // 1. 문제데이터 내부 복사\n            news.data[this.state.page].right = true; // 2.정답처리\n            this.setState({ questionsData: news }); // 3.전체 데이터 갱신\n        } else { // 오답일 경우\n            this.setState({ wrongCount: this.state.wrongCount + 1 }); // state.wrongCount를 +1 합니다\n            this.props.userWordsWrongCountUpdate(this.state.questionsData.data[this.state.page].wordId); //서버 오답 카운트 증가 요청\n        }\n\n        if (this.state.questionsCount === this.state.page) { //시험이 종료된경우\n            this.setState({ viewid: 3 }); //결과 페이지로 이동\n\n            if (this.state.wrongCount === 0) {//만점일 경우\n                if (this.props.noteLearningDate !== this.props.toDay) { //마지막 학습일자가 오늘이 아닐경우에만 학습 상태를 갱신\n                    console.log(`마지막 학습일이 ${this.props.noteLearningDate} 인 단어장입니다 학습일자를 갱신합니다.`)\n                    this.props.userNoteLearningDayUpdate();\n                }\n            }\n        } else {\n            this.setState({ page: this.state.page + 1 }); // 다음 시험 페이지로\n        }\n    }\n    render() {\n        let content;\n        switch (this.state.viewid) {\n            case 1: // 시험 시작전 안내 사항\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center space-y-5\">\n                                <h1 class=\"subpixel-antialiased text-3xl font-semibold text-gray-600 text-center\">주의 사항</h1>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">1.단어시험에서 만점을 받는다면 통과됩니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">2.단어시험에 통과하게 되면 마지막 학습 일자, 복습 횟수가 갱신됩니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">3.당일 생성된 단어장은 다음날부터 학습 일자, 복습 횟수를 갱신할 수 있습니다</h2>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">4.당일 통과한 단어장은 그날은 학습 일자, 복습 횟수가 추가로 갱신되지 않습니다</h2>\n                            </div>\n                            <div class=\"w-full\">\n                                <div onClick={this.pressNextButton} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer text-center\">\n                                    시험 시작하기\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            case 2: //시험\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center\">\n                                <h1 class=\"subpixel-antialiased text-lg font-semibold text-gray-300\">{this.state.page} / {this.state.questionsData.questions - 1}</h1>\n                                <h1 class=\"subpixel-antialiased text-7xl font-semibold text-gray-600\">{this.state.questionsData.data[this.state.page].title}</h1>\n                            </div>\n                            <div class=\"w-full\">\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].one} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].one}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].two} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].two}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].three} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].three}\n                                </div>\n                                <div onClick={this.pressAnswerButton} id={this.state.questionsData.data[this.state.page].four} class=\"w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 cursor-pointer\">\n                                    {this.state.questionsData.data[this.state.page].four}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            case 3: //결과 종합\n                let questionsWordList;\n                questionsWordList = this.state.questionsData.data.map((data) => {\n                    if (data.right) {\n                        return (\n                            <div class=\"flex flex-row w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 subpixel-antialiased text-2xl font-semibold text-gray-600\">\n                                <div class=\"flex-1\">{data.title}</div>\n                                <div class=\"flex-1 text-base\">{data.correctAnswer}</div>\n                                <div class=\"flex-2\"><svg class=\"w-7 h-7 fill-current text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"> <path fill-rule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clip-rule=\"evenodd\" /></svg></div>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div class=\"flex flex-row w-full h-15 bg-gray-100 rounded-lg shadow-sm p-4 mt-4 mr-4 subpixel-antialiased text-2xl font-semibold text-gray-600\">\n                                <div class=\"flex-1\">{data.title}</div>\n                                <div class=\"flex-1 text-base\">{data.correctAnswer}</div>\n                                <div class=\"flex-2\"><svg class=\"w-7 h-7 fill-current text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /></svg></div>\n                            </div>\n                        );\n                    }\n                });\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <h1 class=\"subpixel-antialiased text-7xl font-semibold text-gray-600\">시험 종료!</h1>\n                            {questionsWordList}\n                            {this.state.wrongCount === 0 ? (<h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">단어시험에 통과하셨습니다!</h2>) : (<h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">아쉽지만 단어시험에 통과하지 못했습니다 다시 도전해 보세요 </h2>)}\n                        </div>\n                    </div>\n\n                );\n                break;\n            case 4: //오류\n                content = (\n                    <div class=\"w-full h-full flex justify-center\">\n                        <div class=\"flex flex-col justify-center items-center w-full xl:w-2/3 bg-white rounded-lg shadow-sm p-8\">\n                            <div class=\"flex flex-col justify-center space-y-5\">\n                                <h1 class=\"subpixel-antialiased text-3xl font-semibold text-gray-600 text-center\">단어가 너무 적어요!</h1>\n                                <h2 class=\"subpixel-antialiased text-lg font-semibold text-gray-500 \">단어장에 등록된 단어가 4개 이상 되어야 합니다.</h2>\n                            </div>\n                        </div>\n                    </div>\n                );\n                break;\n            default: // 로딩 화면 또는 상정하지 못한 오류 처리\n                content = <Loading />;\n                break;\n        }\n\n        //랜더\n        return (\n            <div>\n                {content}\n            </div>\n        );\n    }\n}\nexport default WordsTest;\n","/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Dashboard/Dashboard.js",["59"],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/containers/Content/Content.js",[],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Notes/NotesList.js",[],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/App.js",[],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/Word.js",[],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Dashboard/RecommendWidget.js",[],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Login/Login.js",["60"],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/components/Words/WordsList.js",["61","62"],"/Users/leeseongrok/Desktop/Project/babelfish_webapp/src/service/settings.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":24,"column":5,"nodeType":"69","messageId":"70","endLine":98,"endColumn":6},{"ruleId":"71","severity":1,"message":"72","line":18,"column":59,"nodeType":"73","messageId":"74","endLine":18,"endColumn":61},{"ruleId":"75","severity":1,"message":"76","line":24,"column":9,"nodeType":"77","messageId":"78","endLine":29,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":67,"column":74,"nodeType":"81","messageId":"78","endLine":67,"endColumn":76},{"ruleId":"71","severity":1,"message":"82","line":48,"column":43,"nodeType":"73","messageId":"83","endLine":48,"endColumn":45},{"ruleId":"84","severity":1,"message":"85","line":34,"column":21,"nodeType":"86","endLine":34,"endColumn":70},{"ruleId":"71","severity":1,"message":"72","line":32,"column":60,"nodeType":"73","messageId":"74","endLine":32,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":33,"column":28,"nodeType":"81","messageId":"78","endLine":33,"endColumn":30},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]